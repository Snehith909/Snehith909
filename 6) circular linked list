class Node:
    def __init__(self,item=None,next=None):
        self.item = item
        self.next = next
    
class CLL:
    def __init__(self,last=None):
        self.last = last
    
    def is_empty(self):
        return self.last == None

    def insert_at_start(self,data):
        n = Node(data)
        if self.is_empty():
            n.next = n
            self.last = n
           
        else:
            n.next = self.last.next
            self.last.next = n
    def insert_at_last(self,data):
        n = Node(data)
        if self.last != None:
            n.next = self.last.next
            self.last.next = n
            self.last = n
        else:
            n.next = n
            self.last = n
    
    def search(self,data):
        if self.last != None:
            temp = self.last.next
            while temp != self.last:
                if temp.item == data:
                    return temp
                temp = temp.next
            if temp.item == data:
                return temp
        return None

    def insert_after(self,temp,data):
        if temp != None:
            n = Node(data,temp.next)
            temp.next = n
            if temp == self.last:
                self.last = n

    def print_list(self):
        if self.last != None:
            temp = self.last.next
            while temp != self.last:
                print(temp.item,end=" ")
                temp = temp.next
            print(temp.item)

    def delete_at_first(self):
        if self.last != None:
            self.last.next = self.last.next.next
        else:
            if self.last.next == self.last:
                self.last = None
    def delete_last(self):
        if self.last != None:
          temp = self.last.next
          while temp.next != self.last:
             temp = temp.next
          temp.next = self.last.next
          self.last = temp
        else:
            if self.last == self.last.next:
                self.last = None
    def delete_item(self,data):
        if self.last != None:
            temp = self.last.next
            while temp.next.item != data:
                temp = temp.next
            temp.next = temp.next.next

cll = CLL()
cll.insert_at_start(90)
cll.insert_at_start(80)
cll.insert_at_last(20)
cll.insert_at_last(85)
cll.insert_at_last(10)
cll.insert_after(cll.search(20),25)
cll.delete_at_first()
cll.delete_last()
cll.delete_item(20)
cll.print_list()

        
